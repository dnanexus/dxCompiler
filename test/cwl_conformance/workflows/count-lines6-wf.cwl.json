{
  "$graph": [
    {
      "class": "Workflow",
      "id": "#main",
      "inputs": [
        {
          "id": "#main/file1",
          "type": {
            "items": "File",
            "type": "array"
          }
        },
        {
          "id": "#main/file2",
          "type": {
            "items": "File",
            "type": "array"
          }
        }
      ],
      "outputs": [
        {
          "id": "#main/count_output",
          "outputSource": "#main/step1/output",
          "type": {
            "items": "int",
            "type": "array"
          }
        }
      ],
      "requirements": [
        {
          "class": "ScatterFeatureRequirement"
        },
        {
          "class": "MultipleInputFeatureRequirement"
        }
      ],
      "steps": [
        {
          "id": "#main/step1",
          "in": [
            {
              "id": "#main/step1/file1",
              "linkMerge": "merge_nested",
              "source": [
                "#main/file1",
                "#main/file2"
              ]
            }
          ],
          "out": [
            "#main/step1/output"
          ],
          "run": "#wc3-tool.cwl",
          "scatter": "#main/step1/file1"
        }
      ]
    },
    {
      "baseCommand": "wc",
      "class": "CommandLineTool",
      "id": "#wc3-tool.cwl",
      "inputs": [
        {
          "id": "#wc3-tool.cwl/file1",
          "inputBinding": {},
          "type": {
            "items": "File",
            "type": "array"
          }
        }
      ],
      "outputs": [
        {
          "id": "#wc3-tool.cwl/output",
          "outputBinding": {
            "glob": "output.txt",
            "loadContents": true,
            "outputEval": "${\n  var s = self[0].contents.split(/\\r?\\n/);\n  return parseInt(s[s.length-2]);\n}\n"
          },
          "type": "int"
        }
      ],
      "requirements": [
        {
          "class": "InlineJavascriptRequirement"
        }
      ],
      "stdout": "output.txt"
    }
  ],
  "cwlVersion": "v1.2"
}
