name: Test Docker test
on:
  workflow_dispatch:
    inputs:
      should-run-tests:
        description: 'Should run large integration tests (false/true; default: true)'
        required: false
        default: 'true'
permissions:
  contents: write
  packages: read
jobs:
  run-release:
    name: dxCompiler Release (Staging and Prod)
    runs-on: ubuntu-20.04
    env:
      PROJECT: dxCompiler_playground
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      # performance optimizations https://abbbi.github.io/actions/
      - uses: abbbi/github-actions-tune@v1
      - name: Install dxpy and other dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y apt-transport-https wget git openssh-server tree python3 python3-pip python3-venv docker
          cwltool_ver=`jq -r '.execDepends.cwl[0].version' scripts/bundled_dependencies.json`
          pip3 install --upgrade pip setuptools==58.3.0 
          pip3 install termcolor dxpy==0.323.0 cwltool==${cwltool_ver} pyOpenSSL==22.0.0
          export PATH="$PATH:$HOME/.local/bin"
          # install dxda
          dxda_version=`jq -r '.dxda' scripts/bundled_dependencies.json`
          sudo wget -O/usr/local/bin/dx-download-agent https://github.com/dnanexus/dxda/releases/download/${dxda_version}/dx-download-agent-linux
          sudo chmod +x /usr/local/bin/dx-download-agent
      - name: Set-up
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ROBOT_TOKEN: ${{ secrets.DX_STAGING_ROBOT_TOKEN }}
          TEST_ROBOT_TOKEN: ${{ secrets.DX_STAGING_TEST_ROBOT_TOKEN }}
        run: |
          export PATH="$PATH:$HOME/.local/bin"
          # Set up DNAnexus staging environment
          dx login --noprojects --staging --token $ROBOT_TOKEN
          dx select $PROJECT
          cd ${GITHUB_WORKSPACE}
      - name: Run Docker test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ROBOT_TOKEN: ${{ secrets.DX_STAGING_ROBOT_TOKEN }}
        run: |
          dx select $PROJECT
          ./scripts/docker_image/test.sh
