<%@ val dxPathConfig: dx.core.io.DxWorkerPaths %>
<%@ val runtimeJar: String %>
<%@ val runtimeTraceLevel: Int %>
<%@ val streamFiles: dx.core.io.StreamFiles.StreamFiles %>
<% val bashDollar: String = "$" %>

    # evaluate applet outputs, and upload result files -
    # this may write a UA manifest
    java -jar ${bashDollar}{DX_FS_ROOT}/${runtimeJar} task epilog ${bashDollar}{HOME} -traceLevel ${runtimeTraceLevel} -streamFiles ${streamFiles.toString}

    # Upload files using UA
    if [[ -e ${dxPathConfig.getDxuaManifestFile().toString} ]]; then
      rc=0
      ua --manifest ${dxPathConfig.getDxuaManifestFile().toString} >/root/ua.log 2>&1 || rc=${bashDollar}? && true

      # if there was an error during upload, print out the log
      if [[ ${bashDollar}rc != 0 ]]; then
        echo "upload agent failed rc=${bashDollar}rc"
        if [[ -e /root/ua.log ]]; then
          echo "The upload log is:"
          cat /root/ua.log
        fi
        exit ${bashDollar}rc
      fi
    fi
